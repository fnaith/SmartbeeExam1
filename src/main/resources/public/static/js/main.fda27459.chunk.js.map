{"version":3,"sources":["store/CompanyForm.tsx","store/ClientForm.tsx","store/AppStore.tsx","store/global_data.tsx","components/SelectTabs.tsx","components/SelectTab.tsx","components/SelectPanel.tsx","components/company/AddCompanyForm.tsx","components/company/SubmitCompanyForm.tsx","components/company/CompanyFormName.tsx","components/company/CompanyFormAddress.tsx","components/company/CompanyForm.tsx","components/company/CompanyFormList.tsx","components/company/CreateCompany.tsx","components/company/CompanyInfoName.tsx","components/company/CompanyInfoAddress.tsx","components/company/CompanyInfo.tsx","components/company/CompanyInfoList.tsx","components/company/CompanyControl.tsx","components/client/AddClientForm.tsx","components/client/SubmitClientForm.tsx","components/client/ClientFormCompanyId.tsx","components/client/ClientFormName.tsx","components/client/ClientFormEmail.tsx","components/client/ClientFormPhone.tsx","components/client/ClientForm.tsx","components/client/ClientFormList.tsx","components/client/CreateClient.tsx","components/client/ClientInfoCompanyId.tsx","components/client/ClientInfoName.tsx","components/client/ClientInfoEmail.tsx","components/client/ClientInfoPhone.tsx","components/client/ClientInfo.tsx","components/client/ClientInfoList.tsx","components/client/ClientControl.tsx","components/Logout.tsx","components/ControlPanel.tsx","App.tsx","theme.tsx","index.tsx"],"names":["CompanyForm","name","address","this","ClientForm","companyId","email","phone","logRequestError","url","error","msg","console","alert","AppStore","_apiPath","_initted","_updateControlPanel","_companyForms","_companyInfos","_clientForms","_clientInfos","timestamp","date","Date","options","timeZone","DEFAULT_TIMEZONE","hour12","toLocaleString","DEFAULT_LOCALE","readCompanies","log","readClients","updateControlPanel","companyForm","companyForms","push","index","splice","callback","requestOptions","method","headers","body","JSON","stringify","map","id","createdBy","createdAt","updatedBy","updatedAt","fetch","then","response","status","json","catch","appStore","companyInfos","i","length","companyInfo","clientForm","clientForms","clientInfos","window","location","href","global_data","SelectTabs","withStyles","root","minHeight","height","Tabs","SelectTab","minWidth","fontSize","padding","Tab","TeamListPanel","props","expanded","children","AddCompanyForm","Button","variant","color","onClick","event","addCompanyForm","SubmitCompanyForm","createCompanies","CompanyFormName","TextField","label","defaultValue","margin","onChange","input","target","value","CompanyFormAddress","removeCompanyForm","CompanyFormList","key","CreateCompany","Grid","container","item","xs","CompanyInfoName","CompanyInfoAddress","CompanyInfo","disabled","formatTime","saveCompanyInfo","removeCompanyInfo","CompanyInfoList","CompanyControl","AddClientForm","addClientForm","SubmitClientForm","createClients","ClientFormCompanyId","React","useState","anchorEl","setAnchorEl","handleClose","Number","companyIds","MenuItem","getCompanyName","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","ClientFormName","ClientFormEmail","ClientFormPhone","removeClientForm","ClientFormList","CreateClient","ClientInfoCompanyId","ClientInfoName","ClientInfoEmail","ClientInfoPhone","ClientInfo","saveClientInfo","removeClientInfo","ClientInfoList","clientInfo","ClientControl","logout","ControlPanel","flag","setFlag","init","tabValue","setTabValue","scrollButtons","indicatorColor","textColor","SelectPanel","Logout","whyDidYouRender","appStyle","width","App","style","theme","createMuiTheme","palette","primary","main","secondary","red","A400","background","default","require","trackAllPureComponents","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.fda27459.chunk.js","sourcesContent":["class CompanyForm {\n  name: string;\n  address: string;\n\n  constructor() {\n    this.name = \"\";\n    this.address = \"\";\n  }\n}\n  \nexport default CompanyForm;\n","class ClientForm {\n  companyId: number;\n  name: string;\n  email: string;\n  phone: string;\n\n  constructor() {\n    this.companyId = -1;\n    this.name = \"\";\n    this.email = \"\";\n    this.phone = \"\";\n  }\n}\n  \nexport default ClientForm;\n","import CompanyForm from './CompanyForm';\nimport ClientForm from './ClientForm';\n\nfunction logRequestError(url: string, error: any) {\n  const msg: string = `{url=${url},error=${error}}`;\n  console.error(msg);\n  alert(msg);\n}\n\nclass AppStore {\n  private static readonly DEFAULT_TIMEZONE: string = 'Asia/Taipei';\n  private static readonly DEFAULT_LOCALE: string = 'en-US';\n\n  private readonly _apiPath = '';//`${window.location.protocol}//${window.location.hostname}:8080`;\n\n  private _initted: boolean;\n  private _updateControlPanel: any;\n  private _companyForms: CompanyForm[];\n  private _companyInfos: any;\n  private _clientForms: ClientForm[];\n  private _clientInfos: any;\n\n  constructor() {\n    this._initted = false;\n    this._companyForms = [];\n    this._companyInfos = [];\n    this._clientForms = [];\n    this._clientInfos = [];\n  }\n\n  get updateControlPanel(): any {\n    return this._updateControlPanel;\n  }\n\n  set updateControlPanel(updateControlPanel: any) {\n    this._updateControlPanel = updateControlPanel;\n  }\n\n  get companyForms(): CompanyForm[] {\n    return this._companyForms;\n  }\n\n  get companyInfos(): any {\n    return this._companyInfos;\n  }\n\n  get clientForms(): ClientForm[] {\n    return this._clientForms;\n  }\n\n  get clientInfos(): any {\n    return this._clientInfos;\n  }\n\n  formatTime(timestamp: number): string {\n    const date: Date = new Date(timestamp);\n    const options: any = { timeZone: AppStore.DEFAULT_TIMEZONE, hour12: false };\n    const formattedDateTime: string = date.toLocaleString(AppStore.DEFAULT_LOCALE, options);\n    return formattedDateTime;\n  }\n\n  init() {\n    if (this._initted) {\n      return;\n    }\n    this.readCompanies(console.log);\n    this.readClients(console.log);\n    this.updateControlPanel();\n    this._initted = true;\n  }\n\n  addCompanyForm() {\n    var companyForm: CompanyForm = new CompanyForm();\n    companyForm.name = 'Company Name';\n    companyForm.address = 'Company Address';\n    this.companyForms.push(companyForm);\n  }\n\n  removeCompanyForm(index: number) {\n    this.companyForms.splice(index, 1);\n  }\n\n  createCompanies(callback: any) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.companyForms.map(companyForm => {\n        return {id: -1, name: companyForm.name, address: companyForm.address,\n          createdBy: \"\", createdAt: 0, updatedBy: '', updatedAt: 0};\n      }))\n    };\n    const url = `${this._apiPath}/company`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        this._companyForms = [];\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  readCompanies(callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/company`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore._companyInfos = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  saveCompanyInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.companyInfos[index])\n    };\n    const url = `${this._apiPath}/company/${this.companyInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore.companyInfos[index] = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  removeCompanyInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/company/${this.companyInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => {\n        appStore._companyInfos.splice(index, 1);\n        callback();\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  getCompanyName(companyId: number) {\n    for (let i = 0; i < this.companyInfos.length; ++i) {\n      const companyInfo: any = this.companyInfos[i];\n      if (companyId == companyInfo.id) {\n        return `(${companyInfo.id})${companyInfo.name}`;\n      }\n    }\n    return 'Unknown Company';\n  }\n\n  addClientForm() {\n    var clientForm: ClientForm = new ClientForm();\n    clientForm.name = 'Client Name';\n    clientForm.email = 'Company Email';\n    clientForm.phone = 'Company Phone';\n    this.clientForms.push(clientForm);\n  }\n\n  removeClientForm(index: number) {\n    this.clientForms.splice(index, 1);\n  }\n\n  createClients(callback: any) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.clientForms.map(clientForm => {\n        return {id: -1, companyId: clientForm.companyId,  name: clientForm.name,\n          email: clientForm.email, phone: clientForm.phone,\n          createdBy: \"\", createdAt: 0, updatedBy: '', updatedAt: 0};\n      }))\n    };\n    const url = `${this._apiPath}/client`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        this._clientForms = [];\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  readClients(callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/client`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore._clientInfos = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  saveClientInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(this.clientInfos[index])\n    };\n    const url = `${this._apiPath}/client/${this.clientInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => { if (200 != response.status) { throw response.status; } return response.json(); })\n      .then(json => {\n        appStore.clientInfos[index] = json;\n        console.log(json);\n        callback(json);\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  removeClientInfo(index: number, callback: any) {\n    const appStore: AppStore = this;\n    const requestOptions = {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/client/${this.clientInfos[index].id}`;\n    fetch(url, requestOptions)\n      .then(response => {\n        appStore._clientInfos.splice(index, 1);\n        callback();\n      })\n      .catch(error => logRequestError(url, error));\n  }\n\n  logout() {\n    const requestOptions = {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    };\n    const url = `${this._apiPath}/login?logout`;\n    window.location.href = url;\n  }\n}\n\nexport default AppStore;\n","import AppStore from './AppStore';\n\nconst global_data: AppStore = new AppStore();\n\nexport default global_data;\n","import { withStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\n\nconst tabHeight = '32px';\n\nconst SelectTabs = withStyles({\n  root: {\n    minHeight: tabHeight,\n    height: tabHeight\n  }\n})(Tabs);\n\nexport default SelectTabs;\n","import { withStyles } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\n\nconst tabHeight = '32px';\n\nconst SelectTab = withStyles({\n  root: {\n    minWidth: 90,\n    minHeight: tabHeight,\n    height: tabHeight,\n    fontSize: '1.125rem',\n    padding: 8\n  }\n})(Tab);\n\nexport default SelectTab;\n","import React from 'react';\n\ninterface Props {\n  expanded: boolean;\n  children: any;\n}\n\nconst TeamListPanel = function (props: Props) {\n  const { expanded, children } = props;\n\n  return (\n    <div>\n      {\n        expanded ?\n        children:\n        <div></div>\n      }\n    </div>\n  )\n}\n\n//ScenePanel.whyDidYouRender = true;\n\nexport default TeamListPanel;/*React.memo(ScenePanel, (prevProps, nextProps) => {\n  if (prevProps.sceneExpanded === nextProps.sceneExpanded) {\n    return true;\n  }\n  return false;\n});*/\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction AddCompanyForm() {\n  const onClick = (event: any) => {\n    global_data.addCompanyForm();\n    global_data.updateControlPanel()\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Add\n      </Button>\n    </div>\n  );\n}\n\nexport default AddCompanyForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction SubmitCompanyForm() {\n  const onClick = (event: any) => {\n    global_data.createCompanies(() => global_data.readCompanies(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default SubmitCompanyForm;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyFormName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.companyForms[index].name = input;\n  };\n\n  return (\n    <TextField id={'company-form-name-' + index} label=\"Name\"\n      defaultValue={global_data.companyForms[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default CompanyFormName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyFormAddress(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.companyForms[index].address = input;\n  };\n\n  return (\n    <TextField id={'companyForm-address-' + index} label=\"Address\"\n      defaultValue={global_data.companyForms[index].address} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default CompanyFormAddress;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nimport CompanyFormName from './CompanyFormName';\nimport CompanyFormAddress from './CompanyFormAddress';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyForm(props: Props) {\n  const { index } = props;\n\n  const onClick = (event: any) => {\n    global_data.removeCompanyForm(index);\n    global_data.updateControlPanel();\n  };\n\n  return (\n    <div>\n      <CompanyFormName index={index} />\n      <CompanyFormAddress index={index} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default CompanyForm;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport CompanyForm from './CompanyForm';\n\nfunction CompanyFormList() {\n  const companyForms = global_data.companyForms.map((companyForm, i) => <CompanyForm index={i} key={`${companyForm.name}-${companyForm.address}-${i}`}/>);\n\n  return (\n    <div>\n      {companyForms}\n    </div>\n  );\n}\n\nexport default CompanyFormList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport AddCompanyForm from './AddCompanyForm';\nimport SubmitCompanyForm from './SubmitCompanyForm';\nimport CompanyFormList from './CompanyFormList';\n\nconst CreateCompany = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <AddCompanyForm />\n        </Grid>\n        <Grid item xs={4}>\n          <SubmitCompanyForm />\n        </Grid>\n        <Grid item xs={12}>\n          <CompanyFormList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default CreateCompany;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyInfoName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.companyInfos[index].name = input;\n  };\n\n  return (\n    <TextField id={'companyForm-name-' + index} label=\"Name\"\n      defaultValue={global_data.companyInfos[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default CompanyInfoName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyInfoAddress(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.companyInfos[index].address = input;\n  };\n\n  return (\n    <TextField id={'company-form-address-' + index} label=\"Address\"\n      defaultValue={global_data.companyInfos[index].address} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default CompanyInfoAddress;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\nimport CompanyInfoName from './CompanyInfoName';\nimport CompanyInfoAddress from './CompanyInfoAddress';\n\ninterface Props {\n  index: number;\n}\n\nfunction CompanyInfo(props: Props) {\n  const { index } = props;\n\n  const onSaveClick = (event: any) => {\n    global_data.saveCompanyInfo(index, () => global_data.readCompanies(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  const onRemoveClick = (event: any) => {\n    global_data.removeCompanyInfo(index, () => global_data.readCompanies(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <CompanyInfoName index={index} />\n      <CompanyInfoAddress index={index} />\n      <TextField id={'companyForm-created-by-' + index} label=\"CreatedBy\" disabled\n        defaultValue={global_data.companyInfos[index].createdBy} margin=\"dense\"/>\n      <TextField id={'companyForm-created-at-' + index} label=\"CreatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.companyInfos[index].createdAt)} margin=\"dense\"/>\n      <TextField id={'companyForm-updated-by-' + index} label=\"UpdatedBy\" disabled\n        defaultValue={global_data.companyInfos[index].updatedBy} margin=\"dense\"/>\n      <TextField id={'companyForm-updated-at-' + index} label=\"UpdatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.companyInfos[index].updatedAt)} margin=\"dense\"/>\n      <Button variant=\"contained\" color=\"primary\" onClick={onSaveClick}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={onRemoveClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default CompanyInfo;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport CompanyInfo from './CompanyInfo';\n\nfunction CompanyInfoList() {\n  const companyForms = global_data.companyInfos.map((companyInfo: any, i: number) =>\n    <CompanyInfo index={i} key={`${companyInfo.name}-${companyInfo.address}-${companyInfo.createdBy}-${companyInfo.updatedAt}-${i}`}/>);\n\n  return (\n    <div>\n      {companyForms}\n    </div>\n  );\n}\n\nexport default CompanyInfoList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport CompanyInfoList from './CompanyInfoList';\n\nconst CompanyControl = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <CompanyInfoList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default CompanyControl;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction AddClientForm() {\n  const onClick = (event: any) => {\n    global_data.addClientForm();\n    global_data.updateControlPanel()\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Add\n      </Button>\n    </div>\n  );\n}\n\nexport default AddClientForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nfunction SubmitClientForm() {\n  const onClick = (event: any) => {\n    global_data.createClients(() => global_data.readClients(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Submit\n      </Button>\n    </div>\n  );\n}\n\nexport default SubmitClientForm;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientFormCompanyId(props: Props) {\n  const { index } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (companyId: string) => {\n    return () => {\n      setAnchorEl(null);\n      console.log(companyId);\n      global_data.clientForms[index].companyId = Number(companyId);\n      global_data.updateControlPanel();\n    }\n  };\n\n  const companyInfos = ((0 < global_data.companyInfos.length) ? global_data.companyInfos : [{id: -1}]);\n  const companyIds = companyInfos.map((companyInfo: any, i: number) =>\n    <MenuItem onClick={handleClose(companyInfo.id)} key={index + '-company-id-' + companyInfo.id}>\n      {global_data.getCompanyName(companyInfo.id)}</MenuItem>);\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {global_data.getCompanyName(global_data.clientForms[index].companyId)}\n      </Button>\n      <Menu\n        id={'simple-menu-' + index}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {companyIds}\n      </Menu>\n    </div>\n  );\n}\n\nexport default ClientFormCompanyId;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientFormName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientForms[index].name = input;\n  };\n\n  return (\n    <TextField id={'client-form-name-' + index} label=\"Name\"\n      defaultValue={global_data.clientForms[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientFormName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientFormEmail(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientForms[index].email = input;\n  };\n\n  return (\n    <TextField id={'client-form-email-' + index} label=\"Email\"\n      defaultValue={global_data.clientForms[index].email} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientFormEmail;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientFormPhone(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientForms[index].phone = input;\n  };\n\n  return (\n    <TextField id={'client-form-phone-' + index} label=\"Phone\"\n      defaultValue={global_data.clientForms[index].phone} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientFormPhone;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../../store/global_data';\n\nimport ClientFormCompanyId from './ClientFormCompanyId';\nimport ClientFormName from './ClientFormName';\nimport ClientFormEmail from './ClientFormEmail';\nimport ClientFormPhone from './ClientFormPhone';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientForm(props: Props) {\n  const { index } = props;\n\n  const onClick = (event: any) => {\n    global_data.removeClientForm(index);\n    global_data.updateControlPanel();\n  };\n\n  return (\n    <div>\n      <ClientFormCompanyId index={index} />\n      <ClientFormName index={index} />\n      <ClientFormEmail index={index} />\n      <ClientFormPhone index={index} />\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default ClientForm;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport ClientForm from './ClientForm';\n\nfunction ClientFormList() {\n  const clientForms = global_data.clientForms.map((clientForm, i) =>\n    <ClientForm index={i} key={`${clientForm.companyId}-${clientForm.name}-${clientForm.email}-${clientForm.phone}-${i}`}/>);\n\n  return (\n    <div>\n      {clientForms}\n    </div>\n  );\n}\n\nexport default ClientFormList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport AddClientForm from './AddClientForm';\nimport SubmitClientForm from './SubmitClientForm';\nimport ClientFormList from './ClientFormList';\n\nconst CreateClient = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={4}>\n          <AddClientForm />\n        </Grid>\n        <Grid item xs={4}>\n          <SubmitClientForm />\n        </Grid>\n        <Grid item xs={12}>\n          <ClientFormList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default CreateClient;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientInfoCompanyId(props: Props) {\n  const { index } = props;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (companyId: string) => {\n    return () => {\n      setAnchorEl(null);\n      console.log(companyId);\n      global_data.clientInfos[index].companyId = Number(companyId);\n      global_data.updateControlPanel();\n    }\n  };\n\n  const companyInfos = ((0 < global_data.companyInfos.length) ? global_data.companyInfos : [{id: -1}]);\n  const companyIds = companyInfos.map((companyInfo: any, i: number) =>\n    <MenuItem onClick={handleClose(companyInfo.id)} key={index + '-company-id-' + companyInfo.id}>\n      {global_data.getCompanyName(companyInfo.id)}</MenuItem>);\n\n  return (\n    <div>\n      <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        {global_data.getCompanyName(global_data.clientInfos[index].companyId)}\n      </Button>\n      <Menu\n        id={'simple-menu-' + index}\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {companyIds}\n      </Menu>\n    </div>\n  );\n}\n\nexport default ClientInfoCompanyId;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientInfoName(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientInfos[index].name = input;\n  };\n\n  return (\n    <TextField id={'client-info-name-' + index} label=\"Name\"\n      defaultValue={global_data.clientInfos[index].name} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientInfoName;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientInfoEmail(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientInfos[index].email = input;\n  };\n\n  return (\n    <TextField id={'client-info-email-' + index} label=\"Email\"\n      defaultValue={global_data.clientInfos[index].email} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientInfoEmail;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientInfoPhone(props: Props) {\n  const { index } = props;\n\n  const onChange: any = (event: any) => {\n    const input: string = event.target.value;\n\n    global_data.clientInfos[index].phone = input;\n  };\n\n  return (\n    <TextField id={'client-info-phone-' + index} label=\"Phone\"\n      defaultValue={global_data.clientInfos[index].phone} margin=\"dense\" onChange={onChange}/>\n  );\n}\n\nexport default ClientInfoPhone;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nimport global_data from '../../store/global_data';\n\nimport ClientInfoCompanyId from './ClientInfoCompanyId';\nimport ClientInfoName from './ClientInfoName';\nimport ClientInfoEmail from './ClientInfoEmail';\nimport ClientInfoPhone from './ClientInfoPhone';\n\ninterface Props {\n  index: number;\n}\n\nfunction ClientInfo(props: Props) {\n  const { index } = props;\n\n  const onSaveClick = (event: any) => {\n    global_data.saveClientInfo(index, () => global_data.readCompanies(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  const onRemoveClick = (event: any) => {\n    global_data.removeClientInfo(index, () => global_data.readCompanies(\n      () => global_data.updateControlPanel()\n    ));\n  };\n\n  return (\n    <div>\n      <ClientInfoCompanyId index={index} />\n      <ClientInfoName index={index} />\n      <ClientInfoEmail index={index} />\n      <ClientInfoPhone index={index} />\n      <TextField id={'clientForm-created-by-' + index} label=\"CreatedBy\" disabled\n        defaultValue={global_data.clientInfos[index].createdBy} margin=\"dense\"/>\n      <TextField id={'clientForm-created-at-' + index} label=\"CreatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.clientInfos[index].createdAt)} margin=\"dense\"/>\n      <TextField id={'clientForm-updated-by-' + index} label=\"UpdatedBy\" disabled\n        defaultValue={global_data.clientInfos[index].updatedBy} margin=\"dense\"/>\n      <TextField id={'clientForm-updated-at-' + index} label=\"UpdatedAt\" disabled\n        defaultValue={global_data.formatTime(global_data.clientInfos[index].updatedAt)} margin=\"dense\"/>\n      <Button variant=\"contained\" color=\"primary\" onClick={onSaveClick}>\n        Save\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={onRemoveClick}>\n        Remove\n      </Button>\n    </div>\n  );\n}\n\nexport default ClientInfo;\n","import React from 'react';\n\nimport global_data from '../../store/global_data';\n\nimport ClientInfo from './ClientInfo';\n\nfunction ClientInfoList() {\n  const clientForms = global_data.clientInfos.map((clientInfo: any, i: number) =>\n    <ClientInfo index={i} key={`${clientInfo.companyId}-${clientInfo.name}-${clientInfo.address}-${clientInfo.createdBy}-${clientInfo.updatedAt}-${i}`}/>);\n\n  return (\n    <div>\n      {clientForms}\n    </div>\n  );\n}\n\nexport default ClientInfoList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport ClientInfoList from './ClientInfoList';\n\nconst ClientControl = function () {\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <ClientInfoList />\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default ClientControl;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nimport global_data from '../store/global_data';\n\nfunction SubmitCompanyForm() {\n  const onClick = (event: any) => {\n    global_data.logout();\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        Logout\n      </Button>\n    </div>\n  );\n}\n\nexport default SubmitCompanyForm;\n","import React, { useState } from 'react';\n\nimport global_data from '../store/global_data';\n\nimport SelectTabs from './SelectTabs';\nimport SelectTab from './SelectTab';\nimport SelectPanel from './SelectPanel';\nimport CreateCompany from './company/CreateCompany';\nimport CompanyControl from './company/CompanyControl';\nimport CreateClient from './client/CreateClient';\nimport ClientControl from './client/ClientControl';\nimport Logout from './Logout';\n\nconst ControlPanel = function () {\n  const [flag, setFlag] = useState(true);\n  global_data.updateControlPanel = () => setFlag(!flag);\n  global_data.init();\n\n  const [tabValue, setTabValue] = useState(0);\n\n  const handleChange = (event: React.ChangeEvent<{}>, value: number) => {\n    setTabValue(value);\n  };\n\n  return (\n    <div>\n      <SelectTabs\n        value={tabValue}\n        onChange={handleChange}\n        variant=\"scrollable\"\n        scrollButtons=\"auto\"\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        <SelectTab label=\"Create Company\" key={'select-tab-create-companyst'}/>\n        <SelectTab label=\"Company Control\" key={'select-tab-companyst-control'}/>\n        <SelectTab label=\"Create Client\" key={'select-tab-create-client'}/>\n        <SelectTab label=\"Client Control\" key={'select-tab-client-control'}/>\n        <SelectTab label=\"Option\" key={'select-tab-option'}/>\n      </SelectTabs>\n      <SelectPanel expanded={tabValue === 0}>\n        <CreateCompany />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 1}>\n        <CompanyControl />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 2}>\n        <CreateClient />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 3}>\n        <ClientControl />\n      </SelectPanel>\n      <SelectPanel expanded={tabValue === 4}>\n        <Logout />\n      </SelectPanel>\n    </div>\n  )\n}\n\nControlPanel.whyDidYouRender = true;\n\nexport default ControlPanel;\n","import React from 'react';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'font-awesome/scss/font-awesome.scss';\n\nimport ControlPanel from './components/ControlPanel';\n\nconst appStyle: any = { width:'100vw', height: '100vh' };\n\nfunction App() {\n  return (\n    <div style={appStyle}>\n      <ControlPanel />\n    </div>\n  )\n}\n\nexport default App\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nconst whyDidYouRender = require('@welldone-software/why-did-you-render');\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}